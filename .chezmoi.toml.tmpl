{{- /* Checks if running interactively */ -}}
{{- $interactive := stdinIsATTY -}}

{{- /* Determines if machine is a laptop */ -}}
{{- $isLaptop := false -}}
{{- if eq .chezmoi.os "darwin" -}}
{{-   $isLaptop = contains "MacBook" (output "sysctl" "-n" "hw.model") -}}
{{- else if eq .chezmoi.os "linux" -}}
{{-   $isLaptop = eq "laptop" (output "hostnamectl" "--json=short" | mustFromJson).Chassis -}}
{{- end -}}

{{- /* Creates easy identifiers for Linux distros */ -}}
{{- $osId := .chezmoi.os -}}
{{- if hasKey .chezmoi.osRelease "id" -}}
{{-   $osId = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
{{- end -}}
{{- $osIdLike := $osId -}}
{{- if hasKey .chezmoi.osRelease "idLike" -}}
{{-   $osIdLike = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.idLike -}}
{{- end -}}


{{- /* Prompt user for other variables: */ -}}
{{- /* Determines if machine has GUI or is headless (default) */ -}}
{{- $hasGui := false -}}
{{- if $interactive -}}
{{-   $hasGui = promptBool "Does this machine have a GUI" -}}
{{- end -}}

{{- /* Determines what the machine is used for */ -}}
{{- $forWork := true -}}
{{- if $interactive -}}
{{-   $forWork = promptBool "Is this machine for work" -}}
{{- end -}}
{{- $forArt := false -}}
{{- $forGameDev := false -}}
{{- $forGaming := false -}}
{{- $forMusicProd := false -}}
{{- if and $interactive $hasGui (not $forWork) -}}
{{-   $forArt = promptBool "Is this machine for art" -}}
{{-   $forGameDev = promptBool "Is this machine for game development" -}}
{{-   $forGaming = promptBool "Is this machine for gaming" -}}
{{-   $forMusicProd = promptBool "Is this machine for music production" -}}
{{- end -}}

[data]
  user.hasGui = {{ $hasGui }}
  user.isLaptop = {{ $isLaptop }}
  user.osId = {{ $osId | quote }}
  user.osIdLike = {{ $osIdLike | quote }}
  user.usedFor.art = {{ $forArt }}
  user.usedFor.gameDev = {{ $forGameDev }}
  user.usedFor.gaming = {{ $forGaming }}
  user.usedFor.musicProd = {{ $forMusicProd }}
  user.usedFor.work = {{ $forWork }}
